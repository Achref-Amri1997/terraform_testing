name: Terraform reusable workflow
on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      TF_WORKSPACE:
        required: true
        type: string
    secrets:
      AWS_ASSUME_ROLE:
        required: true

jobs:
  terraform-init:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ inputs.AWS_REGION }}
      TF_WORKSPACE: ${{ inputs.TF_WORKSPACE }}

    steps:
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
      
      - name: Assume Role
        id: assume-role
        shell: bash
        run: |
          role_output=$(aws sts assume-role --role-arn "${{ secrets.AWS_ASSUME_ROLE }}" --role-session-name "DevopsAdmin-Session" --output json)

          if [ -z "$role_output" ]; then
            echo "Failed to assume role"
            exit 1
          fi

          echo "Assumed role output: $role_output"
          echo "AWS_ACCESS_KEY_ID=$(echo $role_output | jq -r .Credentials.AccessKeyId)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $role_output | jq -r .Credentials.SecretAccessKey)" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $role_output | jq -r .Credentials.SessionToken)" >> $GITHUB_ENV
          echo "AWS_REGION=${{ inputs.AWS_REGION }}" >> $GITHUB_ENV

          # Debugging: Output the credentials (not recommended in production)
          echo "DEBUG: AWS_ACCESS_KEY_ID=$(echo $role_output | jq -r .Credentials.AccessKeyId)"
          echo "DEBUG: AWS_SECRET_ACCESS_KEY=$(echo $role_output | jq -r .Credentials.SecretAccessKey)"
          echo "DEBUG: AWS_SESSION_TOKEN=$(echo $role_output | jq -r .Credentials.SessionToken)"

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set aws_session_token "$AWS_SESSION_TOKEN"
          aws configure set region "$AWS_REGION"

      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0

      - name: Terraform init
        id: init
        shell: bash
        run: |
          terraform workspace list
          cd terraform
          terraform init -input=false
          echo "TF Provider now initialized"
          echo "-------------------------------------"

      - name: Terraform format
        id: fmt
        shell: bash
        run: |
          cd terraform
          terraform fmt

      - name: Terraform validate
        id: validate
        shell: bash
        run: |
          cd terraform
          terraform validate

      - name: Terraform plan
        id: plan
        shell: bash
        run: |
          cd terraform
          terraform plan -out=tfplan
        continue-on-error: false

      - name: Terraform apply
        id: apply
        run: |
          cd terraform
          terraform apply -input=false -auto-approve
        continue-on-error: false
